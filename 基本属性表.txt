标签规则：
行内标签（e.g.span）不能包含块级标签，只能包含其他标签
块级标签(e.g. div)能包含行内标签



margin： 盒子外边与其他盒子的距离
width: 宽度，单位像素 px
height： 高度，单位像素 px
color ： 前景色，也就是文字颜色
background-color ： 背景色
font-size： 字体大小

padding（内边距）: 盒子内容到盒子内边的距离
padding-top : 上内边距
padding-right: 右内边距
padding-bottom:下内边距
padding-left：左内边距
padding:上 【右下内】
内边距享有背景色

margin（外边距）： 盒子外边与其他盒子的距离
margin-top : 上外边距
margin-right: 右外边距
margin-bottom:下外边距
margin-left：左外边距
当两个区块靠近时，会存在垂直外边距合并现象，原则上谁的外边距大用谁的，body本身也有外边距

规则：
所有和字相关的属性，如color，text系列， font系列，line系列，cursor等，子类标签都可以继承父类的
但所有和盒子相关的属性，如外边距，内边距，边框，背景，定位，元素等，子标签不可以继承父类标签

样式优先级：
内联样式>嵌入样式>外部引入样式>继承样式>默认样式
ID选择器 >类选择器(包括伪类) > 标签 > 继承 > 默认



-----------------------------------------------
--------------------------------元素布局和浮动：

流式布局：按照浏览器宽度大小，盒子从左到右，从上到下一直放入元素，当页面可视宽度不足时，元素会往下一层放
浮动（float）:使元素脱离标准流的控制，浮动到其父级元素的指定浮动位置，/*让元素脱离标准流，不影响本地标准流排版，但影响文字排版*/
但是对于所有浮动元素，浮动元素也遵循着流式布局
浮动元素具备包裹性，元素的大小取决于定义的大小或者默认内容大小

*同一行当中，先写浮动标签，再写文档流标签


关于父容器BFC特性（具备包裹性，即子元素布局不会影响父元素的布局，外边距合并失效）
只要标签设置如下任一特性，即会触发BFC特性：
1. 绝对定位，相对定位
2.float
3.display：table
4.overflow: hidden | auto
5. zoom: 1


清除浮动方案
方案1（使父容器包裹浮动的子元素）：
注意：如果父级标签包含着浮动元素（子系标签），只要在父系标签设置overflow : hidden，即可以包裹浮动元素

方案2（隔离浮动层）
clear（清除浮动） ：在当前元素设置clear属性，让当前元素不与相邻浮动元素重叠（both，left，right）


方案3（标准）：在父容器标签加入clearfix类，即能包裹住子类浮动元素

.clearfix::before, .clearfix::after{
	contet: " ";
	display:table;
}
.clearfix:after{
	clear:both;
}
.clearfix{
	zoom:1
  }



---------------------------------------
-----------------------------定位

Position：
1. relative 相对定位
       /*相对定位设置后，就可以设置css中left，right，bottom，top等属性*/
            position: relative;

            /*left属性，即相对原来标准文档流位置，右移100像素*/
            left: 100px;

            /*right属性，即相对原来标准文档流位置，左移100像素*/
            right: 100px;

            /*bottom属性，即相对原来标准文档流位置，上移移100像素*/
            bottom: 100px;

            /*top属性，即相对原来标准文档流位置，下移100像素*/
            top: 100px;




2. absolute绝对定位，position: absolute;
如果子元素的父容器设置了relative相对定位，并且该子元素设置了绝对定位，该子元素就以父容器的位置进行绝对定位
如果没有找到任何具有相对定位的父容器，则以body为基准
            
            /*left属性，即相对于父容器位置，左侧距离100像素*/
            left: 100px;

            /*right属性，即相对于父容器位置，右侧距离100像素*/
            right: 100px;

            /*bottom属性，即相对于父容器位置，下侧距离100像素*/
            bottom: 100px;

            /*top属性，即相对于父容器位置，上侧距离100像素*/
            top: 100px;

绝对定位具备BFC特性：
1.包裹性：根据实际内容撑开绝对定位元素大小
2.破坏性：由于脱离文档流，导致父容器坍塌
3.悬浮性：会漂浮起来，在原始流的元素之上

z-index:  /*对具备绝对定位的元素，进行层叠排序，z-index值越高,越位于上层*/


3.固定定位 position：fixed
相对于浏览器窗口进行定位，不受滚动条影响，同样具备left，right，top，bottom属性

4. static（静态定位，为浏览器默认方式，遵循文件流标准）


